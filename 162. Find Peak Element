因为没有重复数字，所以只有2种情况，1是递增序列，那么peak就是最后一个数字；2如果n<n-1，那么n-1就是peak
class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        int res;
        for(int i=1;i<nums.size();++i)
        {
            if(nums[i]<nums[i-1])
                return i-1;
        }
        return nums.size()-1;
    }
};



class Solution {
public:

int findPeakElement(const vector<int> &num) {
    return Helper(num, 0, num.size()-1);
}
int Helper(const vector<int> &num, int low, int high)
{
    if(low == high)
        return low;
    else
    {
        int mid1 = (low+high)/2;
        int mid2 = mid1+1;
        if(num[mid1] > num[mid2])
            return Helper(num, low, mid1);
        else
            return Helper(num, mid2, high);
    }
}
};



class Solution {
public:
    int findPeakElement(const vector<int> &num) 
    {
        int low = 0;
        int high = num.size()-1;
        
        while(low < high)
        {
            int mid1 = (low+high)/2;
            int mid2 = mid1+1;
            if(num[mid1] < num[mid2])
                low = mid2;
            else
                high = mid1;
        }
        return low;
    }
};
